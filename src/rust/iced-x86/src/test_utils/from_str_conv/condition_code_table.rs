// SPDX-License-Identifier: MIT
// Copyright wtfsckgh@gmail.com
// Copyright iced contributors

#![allow(unused_results)]

use super::super::super::ConditionCode;
use std::collections::HashMap;

lazy_static! {
	pub(super) static ref TO_CONDITION_CODE_HASH: HashMap<&'static str, ConditionCode> = {
		// GENERATOR-BEGIN: ConditionCodeHash
		// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
		let mut h = HashMap::with_capacity(17);
		h.insert("None", ConditionCode::None);
		h.insert("o", ConditionCode::o);
		h.insert("no", ConditionCode::no);
		h.insert("b", ConditionCode::b);
		h.insert("ae", ConditionCode::ae);
		h.insert("e", ConditionCode::e);
		h.insert("ne", ConditionCode::ne);
		h.insert("be", ConditionCode::be);
		h.insert("a", ConditionCode::a);
		h.insert("s", ConditionCode::s);
		h.insert("ns", ConditionCode::ns);
		h.insert("p", ConditionCode::p);
		h.insert("np", ConditionCode::np);
		h.insert("l", ConditionCode::l);
		h.insert("ge", ConditionCode::ge);
		h.insert("le", ConditionCode::le);
		h.insert("g", ConditionCode::g);
		// GENERATOR-END: ConditionCodeHash
		h
	};
}
