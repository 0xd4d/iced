// SPDX-License-Identifier: MIT
// Copyright wtfsckgh@gmail.com
// Copyright iced contributors

#![allow(unused_results)]

use super::super::super::MemorySizeOptions;
#[cfg(not(feature = "std"))]
use hashbrown::HashMap;
#[cfg(feature = "std")]
use std::collections::HashMap;

lazy_static! {
	pub(super) static ref TO_MEMORY_SIZE_OPTIONS_HASH: HashMap<&'static str, MemorySizeOptions> = {
		// GENERATOR-BEGIN: MemorySizeOptionsHash
		// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
		let mut h = HashMap::with_capacity(4);
		h.insert("Default", MemorySizeOptions::Default);
		h.insert("Always", MemorySizeOptions::Always);
		h.insert("Minimum", MemorySizeOptions::Minimum);
		h.insert("Never", MemorySizeOptions::Never);
		// GENERATOR-END: MemorySizeOptionsHash
		h
	};
}
